Given an array of integers, every element appears thrice except for one which occurs once.

Find that element which does not appear thrice.

Note: Your algorithm should have a linear runtime complexity.

Could you implement it without using extra memory?



1. Notice if we do bitwise calcutation.

..........  suppose this is bitwise expansion of number, not since those element frequency is three they will come in 3. 
so at any point if Number of set bit is 3x + 1 then this is set bit of non repeating.

int Solution::singleNumber(const vector<int> &A) {
    int ans= 0, cnt = 1;
    for(int i = 0; i <= 31; i++){
        int one = 0;
        for(auto x: A){
            if((x >> i) & 1){
                one++;
            }
        } 
        if(one%3){
            ans += cnt;
        }
        cnt = (cnt << 1);
    }
    return ans;
}
